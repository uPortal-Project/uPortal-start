import org.gradle.internal.os.OperatingSystem

plugins {
    // Records all tasks in task graph, generates `build/reports/visteg.dot`
    // dot file can be converted to an image using graphviz. `dot -Tsvg -O -v visteg.dot`
    // id 'cz.malohlava' version '1.0.3'

    id 'net.foragerr.jmeter' version '1.1.0-4.0'
    id "com.github.node-gradle.node" version "3.4.0"
}

// support integration with intellij and eclipse
apply plugin: 'idea'
apply plugin: 'eclipse'

ext {
    /*
     * We need to define the buildProperties extended property here in order for the
     * build to compile.  It will be bootstrapped during the Gradle initialization phase.
     */
    buildProperties = new Properties()
    /*
     * Unfortunately, several of the uPortal CLI tasks need to do
     * significantly different things on different operating systems.
     */
    isWindows = OperatingSystem.current().isWindows()
}

/*
 * Load the buildProperties collection, which is used by the CLI Tools.
 * (NOTE:  This item must come first.)
 */
apply from: rootProject.file('gradle/tasks/properties.gradle')

/*
 * uPortal CLI Tools
 */
apply from: rootProject.file('gradle/tasks/hsql.gradle')
apply from: rootProject.file('gradle/tasks/tomcat.gradle')
apply from: rootProject.file('gradle/tasks/portal.gradle')
apply from: rootProject.file('gradle/tasks/portlet.gradle')
apply from: rootProject.file('gradle/tasks/docker.gradle')
apply from: rootProject.file('gradle/tasks/perf.gradle')
apply from: rootProject.file('gradle/tasks/playwright.gradle')

/*
 * If gradle/tasks/custom.gradle exists, tasks from that
 * file will be made available
 */
File customTasks = rootProject.file('gradle/tasks/custom.gradle')

if(customTasks.isFile()) {
    apply from: customTasks
}

/*
 * Before compiling Java, ensure the Java version is correct.
 */
apply plugin: 'java'
compileJava {
    dependsOn javaVersionCheck
}

/*
 * Enable JMeter testing
 * TODO - enable:  jmSystemPropertiesFiles= [file("buildSrc/src/test/perf/smoke/smokeTest.properties")] 
 */
jmeter {
  jmTestFiles = [file("buildSrc/src/test/perf/smoke/smokeTest.jmx")]
  enableExtendedReports = true
}
