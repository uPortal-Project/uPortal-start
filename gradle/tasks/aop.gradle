repositories {
	mavenLocal()
	mavenCentral()
}

apply plugin: 'java'

sourceSets {
    main {
        java {
            srcDirs = ["custom/aop/src/main/java", "custom/aop/src", "aop/src/main/java", "aop/src", "src/main/java", "src"]
        }
    }
}

dependencies {
    compileOnly "org.aspectj:aspectjrt:${aspectjVersion}"
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.9.1'
}

/*
 * deployAopArchives is a custom task that moves HttpSession instrumented classes and needed
 * dependencies to the correct place within ./gradle/tomcat.  There are three primary parts:
 * 1. Build a jar that contains two cusomt classes, HttpSessionAspect and StandardSessionFacade
 *    and puts them into the .gradle/tomcat/lib folder in their own jar.  HttpSession's implementing class
 *    must be located in tomcat's lib folder or it won't be found, and the aspect must be with it.
 * 2. Put the aspectjweaver.1.9.9.1 jar in the same lib folder
 * 3. Update the catalina.jar that also lives in this lib folder by deleting the now duplicated
 *    StandardSessionFacade.  The current implementation creates a duplicate jar with the missing file
 *    and deletes the original file to prevent conflict.  Once this is done, it's hard to recover without
 *    doing a tomcatInstall, so this may need additinoal work, if this function is run.
 *    If this function is not run, uPortal on tomcat will run as normal.
 */
task deployAopArchives() {
	dependsOn ':portalProperties'
	dependsOn ':downloadDependencies'
	dependsOn ':buildAopJar'
	dependsOn ':buildCatalinaAopJar'
	doLast {
		String serverHome = rootProject.ext['buildProperties'].getProperty('server.home')
		def path = "${project.projectDir}/custom/aop/build/runtime"
		copy {
			from path
			include "*.jar"
			into "${serverHome}/lib"
		}
		delete "${serverHome}/lib/catalina.jar"
	}
}

task downloadDependencies(type :Copy) {
	def path = "${project.projectDir}/custom/aop/build/runtime"
	from sourceSets.main.runtimeClasspath
	into path

	doFirst {
		ant.delete(dir: path)
		ant.mkdir(dir: path)
	}
}

task buildAopJar(type: Zip) {
	dependsOn ":custom:aop:compileJava"

	description 'Build AOP Archive for HttpSession testing'

//	def path = "${project.projectDir}/custom/aop/build/runtime"
	def path = "${project.projectDir}/custom/aop/build/classes/java/main"
	def destinationPath = "${project.projectDir}/custom/aop/build/runtime"
	from (path) {
		include("org/apereo/portal/context/HttpSessionAspect.class")
		include("org/apache/catalina/session/StandardSessionFacade.class")
	}
	archiveName 'uPortalAopArchive.jar'
	destinationDir(file(destinationPath))
}

task buildCatalinaAopJar(type: Zip) {
	dependsOn ':tomcatInstall'
	// I'm not sure why, but :portalProperties does not expose server.home
	// like it does in other functions.  This is directly related to type: Zip
	// in the function designation.  If the tomcat server is located in another location,
	// this property will need to be updated
	String serverHome = ".gradle/tomcat"
	from zipTree("${serverHome}/lib/catalina.jar").matching {
		exclude 'org/apache/catalina/session/StandardSessionFacade.class'
	}
	archiveName 'catalina-aop.jar'
	destinationDir(file("${serverHome}/lib"))
}

